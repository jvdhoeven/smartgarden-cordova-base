{"version":3,"sources":["Diagram.js","constants.js","Containers/Diagram.js","Dashboard.js","MonthlyGarden.js","Containers/Home.js","Containers/Settings.js","Containers/Start.js","Containers/Watering.js","App.js","reportWebVitals.js","index.js"],"names":["chart","SERVICE_UUID","CHARACTERISTIC_TEMP","CHARACTERISTIC_TEMP_GROUND","CHARACTERISTIC_MOISTURE","CHARACTERISTIC_VALVE","Diagram","props","temperature","temperatureGround","moisture","chartRef","useRef","modalRef","useState","temps","setTemps","tempsGround","setTempsGround","moist","setMoist","useEffect","Chart","current","getContext","type","data","datasets","label","yAxisID","backgroundColor","borderColor","fill","options","animation","scales","y","display","position","ticks","callback","value","index","values","y1","grid","drawOnChartArea","UIkit","modal","show","labels","slice","Math","max","length","map","i","update","className","style","height","ref","DiagramContainer","watering","Dashboard","setShowDiagram","uk-grid","onClick","uk-toggle","to","MonthlyGarden","tabIndex","uk-slider","src","alt","href","uk-slidenav-previous","uk-slider-item","uk-slidenav-next","getValueFromNotificationData","String","fromCharCode","apply","Uint8Array","HomeContainer","connected","device","showDiagram","setTemperature","setTemperatureGround","setMoisture","setWatering","console","log","window","ble","startNotification","id","stopNotification","SettingsContainer","StartContainer","devices","selectDevice","element","name","rssi","WateringContainer","selectedProfile","setProfile","startTime","duration","interval","smart","inputs","setInputs","handleInputChange","event","target","onChange","onSubmit","preventDefault","checked","App","history","useHistory","location","useLocation","sessionDevice","JSON","parse","sessionStorage","getItem","isScanning","setIsScanning","setConnected","setDevice","selectedDevice","setSelectedDevice","setDevices","setItem","stringify","pathname","push","stopScan","connect","startScan","exact","path","Watering","Settings","Home","Start","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","browserHistory","createBrowserHistory","document","addEventListener","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5d50e020.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport Chart from 'chart.js/dist/chart';\nimport UIkit from 'uikit';\n\nlet chart;\n\nfunction Diagram(props) {\n    const { temperature, temperatureGround, moisture } = props;\n    const chartRef = useRef(null);\n    const modalRef = useRef(null);\n    const [ temps, setTemps ] = useState([]);\n    const [ tempsGround, setTempsGround ] = useState([]);\n    const [ moist, setMoist ] = useState([]);\n\n    useEffect(() => {\n        const options = {\n            animation: false,\n            scales: {\n                y: {\n                    type: 'linear',\n                    display: true,\n                    position: 'left',\n                    ticks: {\n                        callback: function (value, index, values) {\n                            return `${value} °C`;\n                        }\n                    }\n                },\n                y1: {\n                    type: 'linear',\n                    display: true,\n                    position: 'right',\n                    ticks: {\n                        callback: function (value, index, values) {\n                            return `${value} %`;\n                        }\n                    },\n                    // grid line settings\n                    grid: {\n                        drawOnChartArea: false, // only want the grid lines for one axis to show up\n                    }\n                }\n            }\n        };\n\n        chart = new Chart(chartRef.current.getContext('2d'), {\n            type: 'line',\n            data: {\n                datasets: [{\n                    label: 'Temperature 1',\n                    yAxisID: 'y',\n                    backgroundColor: 'rgba(255, 0, 0, 0.3)',\n                    borderColor: 'rgba(255, 0, 0, 0.4)',\n                }, {\n                    label: 'Temperature 2',\n                    yAxisID: 'y',\n                    backgroundColor: 'rgba(0, 255, 0, 0.3)',\n                    borderColor: 'rgba(0, 255, 0, 0.4)',\n                }, {\n                    label: 'Moist',\n                    yAxisID: 'y1',\n                    backgroundColor: 'rgba(0, 0, 255, 0.3)',\n                    borderColor: 'rgba(0, 0, 255, 0.4)',\n                    fill: true\n                }]\n            },\n            options: options\n        });\n        \n        UIkit.modal(modalRef.current).show();\n    }, []);\n\n    useEffect(() => {\n        if(temperature && temperatureGround && moisture) {\n            setTemps([...temps, temperature]);\n            setTempsGround([...tempsGround, temperatureGround]);\n            setMoist([...moist, moisture]);\n            chart.data.labels = temps.slice(Math.max(temps.length - 20, 0)).map((label, i) => i);\n            chart.data.datasets[0].data = temps.slice(Math.max(temps.length - 20, 0));\n            chart.data.datasets[1].data = tempsGround.slice(Math.max(tempsGround.length - 20, 0));\n            chart.data.datasets[2].data = moist.slice(Math.max(moist.length - 20, 0));\n            chart.update();\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [temperature]);\n\n    return (\n        <div className=\"uk-section uk-section-small\">\n            <div className=\"uk-container\">\n                <h2 className=\"uk-heading-line uk-text-center\"><span>Details</span></h2>\n\n                <canvas style={{height: '80vh'}} ref={chartRef}></canvas>\n            </div>\n        </div>\n    );\n}\n\nexport default Diagram;\n","export const SERVICE_UUID = '4fafc201-1fb5-459e-8fcc-c5c9c331914b';\nexport const CHARACTERISTIC_TEMP = 'beb5483e-36e1-4688-b7f5-ea07361b26a8';\nexport const CHARACTERISTIC_TEMP_GROUND = 'a10b02a4-3b1c-45b5-a617-5648120f8e4c';\nexport const CHARACTERISTIC_MOISTURE = '9a0c0611-a48f-4dbc-bde2-31582e606ee5';\nexport const CHARACTERISTIC_VALVE = 'c3134125-b92d-479f-a437-2de8cea412e7';","import React from 'react';\n\nimport Diagram from '../Diagram';\n\nfunction DiagramContainer(props) {\n    const { temperature, temperatureGround, moisture, watering } = props;\n\n    return (\n        <div>\n            <Diagram temperature={temperature} temperatureGround={temperatureGround} moisture={moisture} watering={watering} />\n        </div>\n    );\n}\n\nexport default DiagramContainer;\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nfunction Dashboard(props) {\n    const { temperature, temperatureGround, moisture, watering, setShowDiagram } = props;\n    return (\n        <div className=\"uk-section uk-section-small\">\n            <div className=\"uk-container\">\n                <h2 className=\"uk-heading-line uk-text-center\"><span>Dashboard</span></h2>\n                <div className=\"uk-child-width-1-2 uk-grid-small uk-grid-match uk-text-center\" uk-grid=\"true\">\n                    <div>\n                        <div className=\"uk-card uk-card-default uk-card-body\">\n                            <span className=\"uk-display-block uk-text-large\"><i className=\"fas fa-temperature-high\"></i></span>\n                            <span className=\"uk-h4\">{temperature} °C</span>\n                        </div>\n                    </div>\n                    <div>\n                        <div className=\"uk-card uk-card-default uk-card-body\">\n                            <span className=\"uk-display-block uk-text-large\"><i className=\"fas fa-temperature-high\"></i></span>\n                            <span className=\"uk-h4\">{temperatureGround} °C</span>\n                        </div>\n                    </div>\n                    <div>\n                        <div className=\"uk-card uk-card-default uk-card-body\">\n                            <span className=\"uk-display-block uk-text-large\"><i className=\"fas fa-water\"></i></span>\n                            <span className=\"uk-h4\">{moisture} %</span>\n                        </div>\n                    </div>\n                    <div>\n                        <div className=\"uk-card uk-card-default uk-card-body\">\n                            <span className=\"uk-display-block uk-text-large\"><i className=\"fas fa-power-off\"></i></span>\n                            <span className=\"uk-h4\">{watering}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"uk-container uk-margin-top\">\n                <button className=\"uk-button uk-button-default uk-width-1-1 uk-margin-small-bottom\" onClick={() => { setShowDiagram(true) }} uk-toggle=\"true\">\n                    <span><i className=\"fas fa-chart-area\"></i> Details</span>\n                </button>\n            </div>\n            <div className=\"uk-container\">\n                <Link className=\"uk-button uk-button-primary uk-width-1-1 uk-margin-small-bottom\" to=\"/watering\"><i\n                    className=\"fas fa-hand-holding-water\"></i> Bewässerung</Link>\n            </div>\n        </div>\n    );\n}\n\nexport default Dashboard;\n","import React from 'react';\n\nfunction MonthlyGarden() {\n    return (\n        <div className=\"uk-section uk-section-small uk-section-muted\">\n            <div className=\"uk-container\">\n                <h2 className=\"uk-heading-line uk-text-center\"><span>Gartenmonat</span></h2>\n                <div className=\"uk-position-relative uk-visible-toggle uk-dark\" tabIndex=\"-1\" uk-slider=\"center: true\">\n\n                    <ul className=\"uk-slider-items uk-grid\">\n                        <li className=\"uk-width-3-4\">\n                            <div className=\"uk-card uk-card-default\">\n                                <div className=\"uk-card-media-top\">\n                                    <img src=\"images/photo.jpg\" alt=\"\" />\n                                </div>\n                                <div className=\"uk-card-body\">\n                                    <h3 className=\"uk-card-title\">April</h3>\n                                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\n                                    incididunt.</p>\n                                </div>\n                            </div>\n                        </li>\n                        <li className=\"uk-width-3-4\">\n                            <div className=\"uk-card uk-card-default\">\n                                <div className=\"uk-card-media-top\">\n                                    <img src=\"images/photo.jpg\" alt=\"\" />\n                                </div>\n                                <div className=\"uk-card-body\">\n                                    <h3 className=\"uk-card-title\">Mai</h3>\n                                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\n                                    incididunt.</p>\n                                </div>\n                            </div>\n                        </li>\n                    </ul>\n\n                    <button className=\"uk-position-center-left uk-position-small uk-hidden-hover\" href=\"#prev\" uk-slidenav-previous=\"true\"\n                        uk-slider-item=\"previous\">&nbsp;</button>\n                    <button className=\"uk-position-center-right uk-position-small uk-hidden-hover\" href=\"#next\" uk-slidenav-next=\"true\"\n                        uk-slider-item=\"next\">&nbsp;</button>\n\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default MonthlyGarden;\n","import React, { useEffect, useState } from 'react';\nimport DiagramContainer from '../Containers/Diagram';\nimport Dashboard from '../Dashboard';\nimport MonthlyGarden from '../MonthlyGarden';\nimport {\n    SERVICE_UUID,\n    CHARACTERISTIC_MOISTURE,\n    CHARACTERISTIC_TEMP,\n    CHARACTERISTIC_TEMP_GROUND,\n    CHARACTERISTIC_VALVE\n} from '../constants';\n\n\nconst getValueFromNotificationData = (data) => {\n    return String.fromCharCode.apply(null, new Uint8Array(data));\n};\n\nfunction HomeContainer(props) {\n    const { connected, device } = props;\n\n    const [showDiagram, setShowDiagram] = useState(false);\n\n    const [temperature, setTemperature] = useState(null);\n    const [temperatureGround, setTemperatureGround] = useState(null);\n    const [moisture, setMoisture] = useState(null);\n    const [watering, setWatering] = useState(null);\n\n    useEffect(() => {\n        console.log('useEffect home');\n        if(connected && device !== null) {\n            window.ble.startNotification(device.id, SERVICE_UUID, CHARACTERISTIC_TEMP, (data) => {\n                console.log('setTemperature', getValueFromNotificationData(data));\n                setTemperature(getValueFromNotificationData(data));\n            }, () => { });\n\n            window.ble.startNotification(device.id, SERVICE_UUID, CHARACTERISTIC_TEMP_GROUND, (data) => {\n                console.log('setTemperatureGround', getValueFromNotificationData(data));\n                setTemperatureGround(getValueFromNotificationData(data));\n            }, () => { });\n\n            window.ble.startNotification(device.id, SERVICE_UUID, CHARACTERISTIC_MOISTURE, (data) => {\n                console.log('setMoisture', getValueFromNotificationData(data));\n                setMoisture(getValueFromNotificationData(data));\n            }, () => { });\n\n            window.ble.startNotification(device.id, SERVICE_UUID, CHARACTERISTIC_VALVE, (data) => {\n                console.log('setWatering', getValueFromNotificationData(data));\n                setWatering(getValueFromNotificationData(data));\n            }, () => { });\n\n            // clean up on unmount\n            return () => {\n                console.log('useEffect home goodbye');\n                window.ble.stopNotification(device.id, SERVICE_UUID, CHARACTERISTIC_TEMP, () => {}, () => { });\n                window.ble.stopNotification(device.id, SERVICE_UUID, CHARACTERISTIC_TEMP_GROUND, () => {}, () => { });\n                window.ble.stopNotification(device.id, SERVICE_UUID, CHARACTERISTIC_MOISTURE, () => {}, () => { });\n                window.ble.stopNotification(device.id, SERVICE_UUID, CHARACTERISTIC_VALVE, () => {}, () => { });\n            };\n        }\n    }, [connected, device]);\n\n    return (\n        <>\n                { connected && !showDiagram && <>\n                    <Dashboard temperature={temperature} temperatureGround={temperatureGround} moisture={moisture} watering={watering} setShowDiagram={setShowDiagram} />\n                    <MonthlyGarden />\n                </>}\n                { connected && showDiagram && <DiagramContainer temperature={temperature} temperatureGround={temperatureGround} moisture={moisture} watering={watering} /> }\n        </>\n    );\n}\n\nexport default HomeContainer;\n","import React from 'react';\n\nfunction SettingsContainer() {\n    return (\n        <div>\n            Settings\n        </div>\n    );\n}\n\nexport default SettingsContainer;\n","import React from 'react';\n\nfunction StartContainer(props) {\n    const { devices, selectDevice } = props;\n\n    return (\n        <div className=\"uk-section uk-section-small\">\n            <div className=\"uk-container\">\n                <h2 className=\"uk-heading-line uk-text-center\"><span>Geräteauswahl</span></h2>\n                { devices.length > 0 &&  <div>\n                    { devices.map(element => <div key={element.name} onClick={() => { selectDevice(element); }}>\n                        <h3>{ element.name }</h3>\n                        <p>{ element.id } { element.rssi }</p>\n                    </div>) }\n                </div> }\n            </div>\n        </div>\n    );\n}\n\nexport default StartContainer;\n","import React, { Fragment, useState } from 'react';\n\nfunction WateringContainer() {\n    const [selectedProfile, setProfile] = useState(0);\n\n    const [inputs, setInputs] = useState({\n        startTime: '12:00',\n        duration: 360,\n        interval: 0,\n        smart: false\n    });\n\n    function handleSelectChange(event) {\n        setProfile(event.target.value);\n    }\n\n    const handleInputChange = (event) => { setInputs(inputs => ({...inputs, [event.target.name]: event.target.value})); }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        console.log(inputs);\n    };\n\n    return (\n        <Fragment>\n            <div className=\"uk-section uk-section-small\">\n                <div className=\"uk-container\">\n                    <h2 className=\"uk-heading-line uk-text-center\"><span>Bewässerung</span></h2>\n                    <form className=\"uk-form-stacked\">\n                        <div>\n                            <label className=\"uk-form-label\">Profile</label>\n                            <div className=\"uk-form-controls\">\n                                <select value={selectedProfile} onChange={handleSelectChange} name=\"profile\" className=\"uk-select\">\n                                    <option value=\"0\">Bitte wählen</option>\n                                    <option value=\"1\">Profil 1</option>\n                                    <option value=\"2\">Profil 2</option>\n                                    <option value=\"3\">Profil 3</option>\n                                </select>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n            { selectedProfile > 0 && <div className=\"uk-section uk-section-small\">\n                <div className=\"uk-container\">\n                    <h3 className=\"uk-heading-line uk-text-center\"><span>Profil {selectedProfile}</span></h3>\n                    <form className=\"uk-form-stacked\" onSubmit={handleSubmit}>\n                        <div className=\"uk-margin\">\n                            <label className=\"uk-form-label\">Startzeit</label>\n                            <div className=\"uk-form-controls\">\n                                <input className=\"uk-input\" type=\"time\" name=\"startTime\" value={inputs.startTime} onChange={handleInputChange} />\n                            </div>\n                        </div>\n                        <div className=\"uk-margin\">\n                            <label className=\"uk-form-label\">Dauer</label>\n                            <div className=\"uk-form-controls\">\n                                <input className=\"uk-input\" type=\"text\" name=\"duration\" value={inputs.duration} onChange={handleInputChange} />\n                            </div>\n                        </div>\n                        <div className=\"uk-margin\">\n                            <label className=\"uk-form-label\">Interval</label>\n                            <div className=\"uk-form-controls\">\n                                <select className=\"uk-select\" name=\"interval\" value={inputs.interval} onChange={handleInputChange}>\n                                    <option value=\"0\">3 mal täglich</option>\n                                    <option value=\"1\">2 mal täglich</option>\n                                    <option value=\"2\">1 mal täglich</option>\n                                    <option value=\"3\">Alle zwei Tage</option>\n                                    <option value=\"4\">Alle drei Tage</option>\n                                    <option value=\"5\">Einmal die Woche</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"uk-margin\">\n                            <label className=\"uk-form-label\">Smarte Bewässerung</label>\n                            <div className=\"uk-form-controls\">\n                                <input className=\"uk-checkbox\" name=\"smart\" checked={inputs.smart} onChange={handleInputChange} type=\"checkbox\" /> Sensoren verwenden\n                            </div>\n                        </div>\n                        <div className=\"uk-margin\">\n                            <button className=\"uk-button uk-button-primary\" type=\"submit\">Submit</button>\n                        </div>\n                    </form>\n                </div>\n            </div>}\n        </Fragment>\n    );\n}\n\nexport default WateringContainer;\n","import React, { useEffect, useState } from 'react';\nimport {\n    Switch,\n    Route,\n    useHistory,\n    useLocation\n} from \"react-router-dom\";\nimport './App.scss';\nimport { SERVICE_UUID } from './constants';\nimport HomeContainer from './Containers/Home';\nimport SettingsContainer from './Containers/Settings';\nimport StartContainer from './Containers/Start';\nimport WateringContainer from './Containers/Watering';\n\nfunction App() {\n    const history = useHistory();\n    const location = useLocation();\n    const sessionDevice = JSON.parse(sessionStorage.getItem('deviceId'));\n\n    // App state\n    const [isScanning, setIsScanning] = useState(false);\n    const [connected, setConnected] = useState(false);\n    const [device, setDevice] = useState(null);\n    const [selectedDevice, setSelectedDevice] = useState(sessionDevice);\n    const [devices, setDevices] = useState([]);\n\n    // If a device is stored in localStorage, we can directly navigate to home page\n    useEffect(() => {\n        if (connected) {\n            sessionStorage.setItem('deviceId', JSON.stringify(selectedDevice));\n            if(location.pathname === '/') {\n                history.push('/home');\n            }\n        }\n    }, [connected, selectedDevice, history, location])\n\n    // If no device is stored in localStorage but user navigated to a route that needs device information, we redirect to device selection page\n    useEffect(() => {\n        if (!selectedDevice && location.pathname !== '/') {\n            history.push('/');\n        }\n    }, [history, selectedDevice, location]);\n\n    // if device was selected, stop scanning\n    useEffect(() => {\n        if (selectedDevice && isScanning) {\n            window.ble.stopScan(() => { }, () => { });\n        }\n    }, [selectedDevice, isScanning]);\n\n    // if device was selected from the list, setup the connection to the device\n    useEffect(() => {\n        if (selectedDevice) {\n            setIsScanning(false);\n            // connect to the selected device\n            window.ble.connect(selectedDevice.id, () => {\n                setConnected(true);\n            });\n        }\n    }, [selectedDevice]);\n\n    // if there is no selectedDevice yet, we initialize the scan for devices\n    useEffect(() => {\n        if (!selectedDevice) {\n            setIsScanning(true);\n            // ble.startScan calls success callback everytime it finds a device that provides the service\n            window.ble.startScan([SERVICE_UUID], (device) => {\n                setDevice(device);\n            }, () => { });\n        }\n    }, [selectedDevice]);\n\n    // append scanned device to device list\n    useEffect(() => {\n        if (device) {\n            setDevices((devices) => [...devices, device]);\n        }\n    }, [device]);\n\n    return (\n        <Switch>\n            <Route exact path=\"/watering\">\n                <WateringContainer />\n            </Route>\n            <Route exact path=\"/settings\">\n                <SettingsContainer />\n            </Route>\n            <Route exact path=\"/home\">\n                <HomeContainer connected={connected} device={selectedDevice} />\n            </Route>\n            <Route exact path=\"/\">\n                <StartContainer devices={devices} selectDevice={setSelectedDevice} />\n            </Route>\n        </Switch>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  HashRouter as Router,\n} from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport './index.scss';\nimport 'uikit/dist/js/uikit.min.js';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nconst browserHistory = createBrowserHistory();\n\nconst startApp = () => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <Router history={browserHistory}>\n        <App />\n      </Router>\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n};\ndocument.addEventListener('deviceready', startApp, false)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}